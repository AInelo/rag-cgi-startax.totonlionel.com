# ðŸš€ RAG CGI avec Server-Sent Events - Architecture ComplÃ¨te


# Structure du projet :
rag-cgi-project/
â”œâ”€â”€ app/
â”‚   â”œâ”€â”€ __init__.py
â”‚   â”œâ”€â”€ main.py                 # FastAPI app principale
â”‚   â”œâ”€â”€ models/
â”‚   â”‚   â”œâ”€â”€ __init__.py
â”‚   â”‚   â””â”€â”€ schemas.py          # ModÃ¨les Pydantic
â”‚   â”œâ”€â”€ services/
â”‚   â”‚   â”œâ”€â”€ __init__.py
â”‚   â”‚   â”œâ”€â”€ rag_service.py      # Logique RAG
â”‚   â”‚   â”œâ”€â”€ embedding_service.py # Gestion embeddings
â”‚   â”‚   â””â”€â”€ llm_service.py      # Interface OpenAI
â”‚   â”œâ”€â”€ utils/
â”‚   â”‚   â”œâ”€â”€ __init__.py
â”‚   â”‚   â”œâ”€â”€ markdown_parser.py  # Parser documents CGI
â”‚   â”‚   â””â”€â”€ text_splitter.py    # Chunking intelligent
â”‚   â””â”€â”€ database/
â”‚       â”œâ”€â”€ __init__.py
â”‚       â””â”€â”€ vector_store.py     # ChromaDB interface
â”œâ”€â”€ data/
â”‚   â””â”€â”€ cgi_documents/          # Documents Markdown CGI
â”œâ”€â”€ static/
â”‚   â”œâ”€â”€ index.html              # Interface de test
â”‚   â””â”€â”€ style.css
â”œâ”€â”€ requirements.txt
â”œâ”€â”€ docker-compose.yml
â”œâ”€â”€ Dockerfile
â””â”€â”€ README.md
