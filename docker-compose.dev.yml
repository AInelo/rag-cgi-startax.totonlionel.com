version: '3.8'

services:
  # Service principal RAG CGI API
  rag-cgi-api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      # Code source pour le hot-reload
      - ./app:/app/app
      - ./static:/app/static
      - ./data:/app/data
      - ./vector_db:/app/vector_db
      # Fichiers de configuration
      - ./requirements.txt:/app/requirements.txt
      - ./.env:/app/.env
    environment:
      - ENVIRONMENT=development
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://redis:6379
      - CHROMA_DB_IMPL=duckdb+parquet
      - PERSIST_DIRECTORY=/app/vector_db
    depends_on:
      - redis
      - chromadb
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Base de donn√©es vectorielle ChromaDB
  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    restart: unless-stopped

  # Cache Redis pour les sessions et cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

  # Interface de test (optionnel)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./static:/usr/share/nginx/html
      - ./nginx.dev.conf:/etc/nginx/nginx.conf
    depends_on:
      - rag-cgi-api
    restart: unless-stopped

volumes:
  redis_data:
  chroma_data:

networks:
  default:
    name: rag-cgi-network 