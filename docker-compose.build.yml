version: '3.8'

services:
  # Service de build pour GitHub Actions
  rag-cgi-builder:
    build:
      context: .
      dockerfile: Dockerfile
    image: rag-cgi:latest
    container_name: rag-cgi-builder
    environment:
      - ENVIRONMENT=build
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://redis:6379
      - CHROMA_DB_IMPL=duckdb+parquet
      - PERSIST_DIRECTORY=/app/vector_db
    depends_on:
      - redis
      - chromadb
    volumes:
      - ./data:/app/data
      - ./vector_db:/app/vector_db
    command: >
      sh -c "
        echo 'Building RAG CGI application...' &&
        python -m pytest tests/ -v &&
        echo 'Build completed successfully!' &&
        tail -f /dev/null
      "

  # Base de donn√©es vectorielle pour les tests de build
  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb-builder
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    volumes:
      - chroma_build_data:/chroma/chroma
    restart: unless-stopped

  # Cache Redis pour les tests
  redis:
    image: redis:7-alpine
    container_name: redis-builder
    command: redis-server --appendonly yes
    volumes:
      - redis_build_data:/data
    restart: unless-stopped

volumes:
  redis_build_data:
  chroma_build_data:

networks:
  default:
    name: rag-cgi-build-network 