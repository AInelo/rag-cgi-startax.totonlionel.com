# ================================
# Redirection HTTP ‚Üí HTTPS
# ================================
server {
    listen 80;
    server_name rag-cgi-startax.totonlionel.com;
    return 301 https://$host$request_uri;
}

# ================================
# Serveur HTTPS s√©curis√© pour FastAPI backend
# ================================
server {
    listen 443 ssl http2;
    server_name rag-cgi-startax.totonlionel.com;

    # Certificats SSL Let's Encrypt
    ssl_certificate /etc/letsencrypt/live/rag-cgi-startax.totonlionel.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rag-cgi-startax.totonlionel.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Configuration des timeouts - AUGMENT√âS pour le streaming
    proxy_connect_timeout       120s;
    proxy_send_timeout          120s;
    proxy_read_timeout          300s;  # Important pour le streaming SSE
    proxy_buffering             off;    # D√©sactiver le buffering pour le streaming
    proxy_cache                 off;    # Pas de cache pour le streaming

    # ================================
    # Route pour Server-Sent Events (streaming)
    # ================================
    location /query/stream {
        # ‚úÖ CORRECT: NGINX syst√®me ‚Üí Conteneur Docker sur port 8080
        proxy_pass http://127.0.0.1:8080/query/stream;
        
        # Headers sp√©ciaux pour Server-Sent Events
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        
        # Configuration SSE
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 3600s;  # 1 heure pour les longues sessions
        
        # Headers pour SSE
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        add_header X-Accel-Buffering "no";  # Nginx sp√©cifique
        
        # CORS simple pour SSE (FastAPI g√®re d√©j√† CORS)
        add_header Access-Control-Allow-Origin "*";
    }

    # ================================
    # Route principale pour toutes les autres requ√™tes
    # ================================
    location / {
        # ‚úÖ CORRECT: NGINX syst√®me ‚Üí Conteneur Docker sur port 8080
        proxy_pass http://127.0.0.1:8080;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Headers pour FastAPI
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # üîß SUPPRIM√â: Headers CORS redondants (FastAPI les g√®re d√©j√† via middleware)
    }

    # ================================
    # Route pour les checks de sant√©
    # ================================
    location /health {
        proxy_pass http://127.0.0.1:8080/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout court pour health check
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # ================================
    # Servir les fichiers statiques (optionnel)
    # ================================
    location /static/ {
        # üîß ATTENTION: V√©rifiez que ce chemin existe sur votre serveur
        alias /app/static/;
        autoindex off;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Fallback vers FastAPI si le fichier n'existe pas
        try_files $uri @fallback;
    }
    
    location @fallback {
        proxy_pass http://127.0.0.1:8080;
    }

    # ================================
    # Gestion des logs
    # ================================
    error_log /var/log/nginx/rag-cgi-error.log warn;
    access_log /var/log/nginx/rag-cgi-access.log;
}
































# # ================================
# # Redirection HTTP ‚Üí HTTPS
# # ================================
# server {
#     listen 80;
#     server_name rag-cgi-startax.totonlionel.com;

#     return 301 https://$host$request_uri;
# }

# # ================================
# # Serveur HTTPS s√©curis√© pour FastAPI backend
# # ================================
# server {
#     listen 443 ssl http2;
#     server_name rag-cgi-startax.totonlionel.com;

#     # Certificats SSL Let's Encrypt
#     ssl_certificate /etc/letsencrypt/live/rag-cgi-startax.totonlionel.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/rag-cgi-startax.totonlionel.com/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

#     # Proxy vers l'app RAG CGI (port 8080 qui redirige vers 8000 dans le container)
#     location / {
#         proxy_pass http://127.0.0.1:8080;   # <-- Port expos√© par docker-compose
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;

#         # CORS - autoriser les requ√™tes cross-origin
#         add_header "Access-Control-Allow-Origin" "*" always;
#         add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS" always;
#         add_header "Access-Control-Allow-Headers" "Origin, Content-Type, Accept, Authorization" always;

#         # R√©ponse imm√©diate pour les requ√™tes OPTIONS (pr√©vol CORS)
#         if ($request_method = OPTIONS) {
#             add_header "Access-Control-Max-Age" 1728000;
#             add_header "Content-Type" "text/plain; charset=UTF-8";
#             add_header "Content-Length" 0;
#             return 204;
#         }
#     }

#     # (Optionnel) Servir les fichiers statiques depuis ton dossier /static
#     location /static/ {
#         alias /app/static/;   # <-- chemin dans ton conteneur/app
#         autoindex off;
#     }
# }